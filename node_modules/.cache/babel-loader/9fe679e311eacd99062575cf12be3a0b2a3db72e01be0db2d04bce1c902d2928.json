{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\TastySite\\\\src\\\\pages\\\\Recipelist\\\\Button.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = () => {\n  _s();\n  const [btnState, setBtnState] = useState(false);\n  const {\n    description,\n    ingredients,\n    prep\n  } = props.data;\n  const handleClick = () => {\n    setBtnState(btnState => !btnState);\n  };\n  let recipeCheck = btnState ? ' active' : '';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center group\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `bg-primary h-[40px] text-white px-3 py-2${recipeCheck}`,\n        onClick: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ingredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: prep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n};\n_s(Button, \"mdG1Zi+qpHAr5XrFaJCA4g/Y+QA=\");\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Button","_s","btnState","setBtnState","description","ingredients","prep","props","data","handleClick","recipeCheck","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/projects/TastySite/src/pages/Recipelist/Button.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Button = () => {\r\n\r\n\r\n\r\n    const [btnState, setBtnState] = useState(false);\r\n    const {description,ingredients,prep}=props.data;\r\n\r\n    const handleClick = () => {\r\n        setBtnState(btnState => !btnState);\r\n\r\n    };\r\n\r\n    let recipeCheck = btnState ? ' active': '';\r\n\r\n\r\n  return <>\r\n <div className='flex items-center group'>\r\n   <button className={`bg-primary h-[40px] text-white px-3 py-2${recipeCheck}`} onClick={handleClick}>\r\n    <p>\r\n        {description}\r\n    </p>\r\n    <p>\r\n        {ingredients}\r\n\r\n    </p>\r\n    <p>\r\n        {prep}\r\n    </p>\r\n    </button>\r\n\r\n\r\n  </div>\r\n  </>;\r\n};\r\n\r\nexport default Button"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAIjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM;IAACS,WAAW;IAACC,WAAW;IAACC;EAAI,CAAC,GAACC,KAAK,CAACC,IAAI;EAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtBN,WAAW,CAACD,QAAQ,IAAI,CAACA,QAAQ,CAAC;EAEtC,CAAC;EAED,IAAIQ,WAAW,GAAGR,QAAQ,GAAG,SAAS,GAAE,EAAE;EAG5C,oBAAOL,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACRd,OAAA;MAAKe,SAAS,EAAC,yBAAyB;MAAAD,QAAA,eACtCd,OAAA;QAAQe,SAAS,EAAG,2CAA0CF,WAAY,EAAE;QAACG,OAAO,EAAEJ,WAAY;QAAAE,QAAA,gBACjGd,OAAA;UAAAc,QAAA,EACKP;QAAW;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,eACJpB,OAAA;UAAAc,QAAA,EACKN;QAAW;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CAAC,eACJpB,OAAA;UAAAc,QAAA,EACKL;QAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGN;EAAC,gBACJ,CAAC;AACL,CAAC;AAAChB,EAAA,CAjCID,MAAM;AAAAkB,EAAA,GAANlB,MAAM;AAmCZ,eAAeA,MAAM;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}